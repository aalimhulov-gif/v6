// ========== –ü–†–û–°–¢–û–ï –†–ï–ó–ï–†–í–ù–û–ï –ö–û–ü–ò–†–û–í–ê–ù–ò–ï ==========

class SimpleBackup {
  constructor() {
    this.init();
  }
  
  init() {
    // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –≤ –±—É—Ä–≥–µ—Ä-–º–µ–Ω—é
    this.addBackupButtons();
  }
  
  addBackupButtons() {
    // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫—É DOM
    document.addEventListener('DOMContentLoaded', () => {
      const burgerContent = document.querySelector('.burger-menu-content');
      if (burgerContent) {
        
        // –†–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å –ø–µ—Ä–µ–¥ backup —Ñ—É–Ω–∫—Ü–∏—è–º–∏
        const separator = document.createElement('div');
        separator.style.cssText = 'height: 1px; background: rgba(255,255,255,0.2); margin: 15px 0;';
        burgerContent.appendChild(separator);
        
        // –ö–Ω–æ–ø–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞ –¥–∞–Ω–Ω—ã—Ö
        const exportBtn = document.createElement('button');
        exportBtn.className = 'burger-item';
        exportBtn.innerHTML = 'üì§ –°–∫–∞—á–∞—Ç—å —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é';
        exportBtn.onclick = () => {
          this.exportData();
          this.closeBurgerMenu();
        };
        burgerContent.appendChild(exportBtn);
        
        // –ö–Ω–æ–ø–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –¥–∞–Ω–Ω—ã—Ö
        const importBtn = document.createElement('button');
        importBtn.className = 'burger-item';
        importBtn.innerHTML = 'üì• –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏–∑ –∫–æ–ø–∏–∏';
        importBtn.onclick = () => {
          this.importData();
          this.closeBurgerMenu();
        };
        burgerContent.appendChild(importBtn);
        
        // –ö–Ω–æ–ø–∫–∞ –ø–æ–ª–Ω–æ–π –æ—á–∏—Å—Ç–∫–∏ (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –Ω—É–∂–Ω–∞)
        const clearBtn = document.createElement('button');
        clearBtn.className = 'burger-item';
        clearBtn.innerHTML = 'üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ –¥–∞–Ω–Ω—ã–µ';
        clearBtn.style.color = '#ff6b6b';
        clearBtn.onclick = () => {
          this.clearAllData();
          this.closeBurgerMenu();
        };
        burgerContent.appendChild(clearBtn);
      }
    });
  }
  
  closeBurgerMenu() {
    if (typeof closeBurgerMenu === 'function') {
      closeBurgerMenu();
    }
  }
  
  // –≠–∫—Å–ø–æ—Ä—Ç –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö
  exportData() {
    try {
      const data = {
        transactions: JSON.parse(localStorage.getItem('transactions') || '[]'),
        categories: JSON.parse(localStorage.getItem('categories') || '[]'),
        goals: JSON.parse(localStorage.getItem('goals') || '[]'),
        budgetCategories: JSON.parse(localStorage.getItem('budgetCategories') || '[]'),
        recurringTransactions: JSON.parse(localStorage.getItem('recurringTransactions') || '[]'),
        settings: JSON.parse(localStorage.getItem('appSettings') || '{}'),
        exportDate: new Date().toISOString(),
        version: '6.1'
      };
      
      // –°–æ–∑–¥–∞–µ–º –∫—Ä–∞—Å–∏–≤–æ–µ –∏–º—è —Ñ–∞–π–ª–∞ —Å –¥–∞—Ç–æ–π
      const now = new Date();
      const dateStr = now.toLocaleDateString('ru-RU').replace(/\./g, '-');
      const filename = `–°–µ–º–µ–π–Ω—ã–π_–ë—é–¥–∂–µ—Ç_${dateStr}.json`;
      
      // –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª
      this.downloadJSON(data, filename);
      
      if (typeof window.notificationSystem !== 'undefined') {
        window.notificationSystem.show(
          `‚úÖ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞: ${filename}`, 
          'success', 
          4000
        );
      }
      
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞:', error);
      if (typeof window.notificationSystem !== 'undefined') {
        window.notificationSystem.show('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏', 'error');
      }
    }
  }
  
  // –ò–º–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö
  importData() {
    // –°–æ–∑–¥–∞–µ–º —Å–∫—Ä—ã—Ç—ã–π input –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ñ–∞–π–ª–∞
    const input = document.createElement('input');
    input.type = 'file';
    input.accept = '.json';
    input.style.display = 'none';
    
    input.onchange = (event) => {
      const file = event.target.files[0];
      if (!file) return;
      
      const reader = new FileReader();
      reader.onload = (e) => {
        try {
          const data = JSON.parse(e.target.result);
          
          // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –Ω–∞—à —Ñ–∞–π–ª
          if (!data.transactions || !data.exportDate) {
            throw new Error('–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞');
          }
          
          // –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è
          if (confirm('‚ö†Ô∏è –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –∑–∞–º–µ–Ω–∏—Ç –≤—Å–µ —Ç–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ. –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å?')) {
            
            // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ
            localStorage.setItem('transactions', JSON.stringify(data.transactions));
            localStorage.setItem('categories', JSON.stringify(data.categories || []));
            localStorage.setItem('goals', JSON.stringify(data.goals || []));
            localStorage.setItem('budgetCategories', JSON.stringify(data.budgetCategories || []));
            localStorage.setItem('recurringTransactions', JSON.stringify(data.recurringTransactions || []));
            localStorage.setItem('appSettings', JSON.stringify(data.settings || {}));
            
            if (typeof window.notificationSystem !== 'undefined') {
              window.notificationSystem.show(
                '‚úÖ –î–∞–Ω–Ω—ã–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –∏–∑ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏!', 
                'success', 
                4000
              );
            }
            
            // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
            setTimeout(() => {
              location.reload();
            }, 2000);
          }
          
        } catch (error) {
          console.error('–û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞:', error);
          if (typeof window.notificationSystem !== 'undefined') {
            window.notificationSystem.show('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π–ª.', 'error');
          }
        }
      };
      
      reader.readAsText(file);
    };
    
    document.body.appendChild(input);
    input.click();
    document.body.removeChild(input);
  }
  
  // –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö
  clearAllData() {
    if (confirm('‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï! –≠—Ç–æ —É–¥–∞–ª–∏—Ç –í–°–ï –¥–∞–Ω–Ω—ã–µ –±–µ–∑–≤–æ–∑–≤—Ä–∞—Ç–Ω–æ!\n\n–í—ã —É–≤–µ—Ä–µ–Ω—ã?')) {
      if (confirm('üö® –ü–û–°–õ–ï–î–ù–ï–ï –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–ï!\n\n–í—Å–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏, —Ü–µ–ª–∏ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±—É–¥—É—Ç —É–¥–∞–ª–µ–Ω—ã!\n–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å?')) {
        
        try {
          // –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ localStorage
          console.log('üóëÔ∏è –ù–∞—á–∏–Ω–∞–µ–º –ø–æ–ª–Ω—É—é –æ—á–∏—Å—Ç–∫—É –¥–∞–Ω–Ω—ã—Ö...');
          
          // –û—á–∏—â–∞–µ–º –≤–µ—Å—å localStorage
          localStorage.clear();
          console.log('‚úÖ localStorage –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ—á–∏—â–µ–Ω');
          
          // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ —É–¥–∞–ª—è–µ–º —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –∫–ª—é—á–∏ –µ—Å–ª–∏ –æ–Ω–∏ –æ—Å—Ç–∞–ª–∏—Å—å
          const keysToRemove = [
            'transactions', 'categories', 'goals', 'budgetCategories', 
            'recurringTransactions', 'appSettings', 'lastBackupDate',
            'budgetAppAuth', 'protectionEnabled', 'lastSyncTime'
          ];
          
          keysToRemove.forEach(key => {
            localStorage.removeItem(key);
            sessionStorage.removeItem(key);
          });
          
          // –û—á–∏—â–∞–µ–º –∏ Firebase –µ—Å–ª–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω
          if (window.firebaseSync && window.firebaseSync.isInitialized) {
            try {
              const database = window.firebaseSync.database;
              database.ref().remove(); // –£–¥–∞–ª—è–µ–º –í–°–Å
              console.log('‚úÖ Firebase –¥–∞–Ω–Ω—ã–µ —Ç–æ–∂–µ –æ—á–∏—â–µ–Ω—ã');
            } catch (error) {
              console.log('‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ Firebase:', error);
            }
          }
          
          // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
          alert('üóëÔ∏è –í—Å–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é —É–¥–∞–ª–µ–Ω—ã!\n\n–°—Ç—Ä–∞–Ω–∏—Ü–∞ –±—É–¥–µ—Ç –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–µ–Ω–∞.');
          
          // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ –±–µ–∑ –∫–µ—à–∞
          setTimeout(() => {
            window.location.reload(true);
          }, 1000);
          
        } catch (error) {
          console.error('‚ùå –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö:', error);
          alert('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –¥–∞–Ω–Ω—ã—Ö: ' + error.message);
        }
      }
    }
  }
  
  // –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è JSON
  downloadJSON(data, filename) {
    const blob = new Blob([JSON.stringify(data, null, 2)], { 
      type: 'application/json' 
    });
    
    const url = URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = filename;
    a.style.display = 'none';
    
    document.body.appendChild(a);
    a.click();
    document.body.removeChild(a);
    
    URL.revokeObjectURL(url);
  }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –±—ç–∫–∞–ø–∞
window.simpleBackup = new SimpleBackup();