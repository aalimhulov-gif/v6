// ========== –ü–†–û–°–¢–ê–Ø –ó–ê–©–ò–¢–ê –ü–ê–†–û–õ–ï–ú ==========

class SimpleAuth {
  constructor() {
    this.isAuthenticated = false;
    this.sessionKey = 'budgetAppAuth';
    this.passwordHash = 'simple_password_123'; // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à –ø–∞—Ä–æ–ª—å
    
    this.init();
  }
  
  init() {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∞–∫—Ç–∏–≤–Ω–∞—è —Å–µ—Å—Å–∏—è
    const savedAuth = localStorage.getItem(this.sessionKey);
    const now = Date.now();
    
    if (savedAuth) {
      try {
        const authData = JSON.parse(savedAuth);
        // –°–µ—Å—Å–∏—è –¥–µ–π—Å—Ç–≤—É–µ—Ç 24 —á–∞—Å–∞
        if (authData.expires > now) {
          this.isAuthenticated = true;
          return;
        } else {
          localStorage.removeItem(this.sessionKey);
        }
      } catch (e) {
        localStorage.removeItem(this.sessionKey);
      }
    }
    
    // –ï—Å–ª–∏ –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É –≤—Ö–æ–¥–∞
    if (!this.isAuthenticated) {
      this.showLoginForm();
    }
  }
  
  showLoginForm() {
    // –°–∫—Ä—ã–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    const mainContent = document.body;
    mainContent.style.display = 'none';
    
    // –°–æ–∑–¥–∞–µ–º —Ñ–æ—Ä–º—É –≤—Ö–æ–¥–∞
    const loginForm = document.createElement('div');
    loginForm.id = 'loginForm';
    loginForm.style.cssText = `
      position: fixed;
      top: 0;
      left: 0;
      width: 100vw;
      height: 100vh;
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      display: flex;
      align-items: center;
      justify-content: center;
      z-index: 10000;
      font-family: -apple-system, BlinkMacSystemFont, sans-serif;
    `;
    
    loginForm.innerHTML = `
      <div style="background: white; padding: 40px; border-radius: 20px; box-shadow: 0 20px 40px rgba(0,0,0,0.1); text-align: center; max-width: 400px; width: 90%;">
        <h2 style="color: #333; margin-bottom: 30px; font-size: 24px;">üí∞ –ù–∞—à –°–µ–º–µ–π–Ω—ã–π –ë—é–¥–∂–µ—Ç</h2>
        <p style="color: #666; margin-bottom: 30px;">–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é</p>
        
        <input type="password" id="passwordInput" placeholder="–ü–∞—Ä–æ–ª—å" 
               style="width: 100%; padding: 15px; border: 2px solid #ddd; border-radius: 10px; font-size: 16px; margin-bottom: 20px; box-sizing: border-box;">
        
        <button onclick="simpleAuth.login()" 
                style="width: 100%; padding: 15px; background: #667eea; color: white; border: none; border-radius: 10px; font-size: 16px; cursor: pointer; transition: all 0.3s;">
          –í–æ–π—Ç–∏
        </button>
        
        <div id="loginError" style="color: #e74c3c; margin-top: 15px; display: none;">
          –ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å
        </div>
        
        <p style="color: #999; font-size: 12px; margin-top: 30px;">
          –≠—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–æ —Ç–æ–ª—å–∫–æ –¥–ª—è —Å–µ–º–µ–π–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
        </p>
      </div>
    `;
    
    document.body.appendChild(loginForm);
    
    // –§–æ–∫—É—Å –Ω–∞ –ø–æ–ª–µ –ø–∞—Ä–æ–ª—è
    setTimeout(() => {
      document.getElementById('passwordInput').focus();
    }, 100);
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ Enter
    document.getElementById('passwordInput').addEventListener('keypress', (e) => {
      if (e.key === 'Enter') {
        this.login();
      }
    });
  }
  
  login() {
    const password = document.getElementById('passwordInput').value;
    const errorDiv = document.getElementById('loginError');
    
    // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø–∞—Ä–æ–ª–µ–π –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    const validPasswords = [
      'budget2024',     // –û—Å–Ω–æ–≤–Ω–æ–π –ø–∞—Ä–æ–ª—å
      'family123',      // –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π
      'ourbudget',      // –ü—Ä–æ—Å—Ç–æ–π
      this.passwordHash // –†–µ–∑–µ—Ä–≤–Ω—ã–π
    ];
    
    if (validPasswords.includes(password)) {
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é –Ω–∞ 24 —á–∞—Å–∞
      const authData = {
        authenticated: true,
        expires: Date.now() + (24 * 60 * 60 * 1000),
        user: 'family'
      };
      
      localStorage.setItem(this.sessionKey, JSON.stringify(authData));
      this.isAuthenticated = true;
      
      // –£–±–∏—Ä–∞–µ–º —Ñ–æ—Ä–º—É –≤—Ö–æ–¥–∞ –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
      document.getElementById('loginForm').remove();
      document.body.style.display = '';
      
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –≤—Ö–æ–¥–µ
      if (typeof window.notificationSystem !== 'undefined') {
        window.notificationSystem.show('üíï –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –≤–∞—à —Å–µ–º–µ–π–Ω—ã–π –±—é–¥–∂–µ—Ç!', 'success');
      } else {
        // Fallback –µ—Å–ª–∏ —Å–∏—Å—Ç–µ–º–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –µ—â–µ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω–∞
        setTimeout(() => {
          if (typeof window.notificationSystem !== 'undefined') {
            window.notificationSystem.show('ÔøΩ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –≤–∞—à —Å–µ–º–µ–π–Ω—ã–π –±—é–¥–∂–µ—Ç!', 'success');
          }
        }, 2000);
      }
      
    } else {
      errorDiv.style.display = 'block';
      document.getElementById('passwordInput').value = '';
      document.getElementById('passwordInput').focus();
    }
  }
  
  logout() {
    localStorage.removeItem(this.sessionKey);
    this.isAuthenticated = false;
    location.reload();
  }
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –¥–ª—è –¥—Ä—É–≥–∏—Ö —á–∞—Å—Ç–µ–π –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
  checkAuth() {
    return this.isAuthenticated;
  }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞—â–∏—Ç—ã –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
window.simpleAuth = new SimpleAuth();