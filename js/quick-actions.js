// ========== –ë–´–°–¢–†–´–ï –î–ï–ô–°–¢–í–ò–Ø ==========

class QuickActions {
  constructor() {
    this.isEnabled = true; // –ú–æ–∂–Ω–æ –≤–∫–ª—é—á–∞—Ç—å/–≤—ã–∫–ª—é—á–∞—Ç—å
    this.init();
  }
  
  init() {
    if (!this.isEnabled) return;
    
    // –î–æ–±–∞–≤–ª—è–µ–º –±—ã—Å—Ç—Ä—ã–µ –∫–Ω–æ–ø–∫–∏ –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ DOM
    document.addEventListener('DOMContentLoaded', () => {
      setTimeout(() => {
        this.createFloatingButtons();
        this.setupHotkeys();
      }, 1000); // –ó–∞–¥–µ—Ä–∂–∫–∞ —á—Ç–æ–±—ã –≤—Å—ë —Ç–æ—á–Ω–æ –∑–∞–≥—Ä—É–∑–∏–ª–æ—Å—å
    });
  }
  
  createFloatingButtons() {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–µ —Å–æ–∑–¥–∞–ª–∏ –ª–∏ —É–∂–µ
    if (document.getElementById('quickActionsPanel')) return;
    
    const panel = document.createElement('div');
    panel.id = 'quickActionsPanel';
    panel.style.cssText = `
      position: fixed;
      bottom: 80px;
      right: 20px;
      display: flex;
      flex-direction: column;
      gap: 12px;
      z-index: 999;
      transition: all 0.3s ease;
      opacity: 0.9;
    `;
    
    // –ë—ã—Å—Ç—Ä—ã–π –¥–æ—Ö–æ–¥
    const incomeBtn = this.createButton('üí∞', '#4CAF50', () => {
      this.quickAddIncome();
    }, '–ë—ã—Å—Ç—Ä—ã–π –¥–æ—Ö–æ–¥ (Ctrl+1)');
    
    // –ë—ã—Å—Ç—Ä—ã–π —Ä–∞—Å—Ö–æ–¥  
    const expenseBtn = this.createButton('üí∏', '#f44336', () => {
      this.quickAddExpense();
    }, '–ë—ã—Å—Ç—Ä—ã–π —Ä–∞—Å—Ö–æ–¥ (Ctrl+2)');
    
    // –ü–æ–∫–∞–∑–∞—Ç—å –±–∞–ª–∞–Ω—Å
    const balanceBtn = this.createButton('üìä', '#2196F3', () => {
      this.showQuickBalance();
    }, '–ë–∞–ª–∞–Ω—Å (Ctrl+B)');
    
    panel.appendChild(incomeBtn);
    panel.appendChild(expenseBtn);
    panel.appendChild(balanceBtn);
    
    document.body.appendChild(panel);
    
    // –ê–≤—Ç–æ—Å–∫—Ä—ã—Ç–∏–µ –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö
    this.setupAutoHide(panel);
    
    console.log('‚úÖ –ü–ª–∞–≤–∞—é—â–∏–µ –∫–Ω–æ–ø–∫–∏ —Å–æ–∑–¥–∞–Ω—ã');
  }
  
  createButton(emoji, color, onClick, title) {
    const btn = document.createElement('button');
    btn.innerHTML = emoji;
    btn.title = title;
    btn.style.cssText = `
      width: 56px;
      height: 56px;
      border-radius: 50%;
      border: none;
      background: ${color};
      color: white;
      font-size: 22px;
      cursor: pointer;
      box-shadow: 0 4px 12px rgba(0,0,0,0.2);
      transition: all 0.2s ease;
      display: flex;
      align-items: center;
      justify-content: center;
      user-select: none;
    `;
    
    // –≠—Ñ—Ñ–µ–∫—Ç—ã –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏
    btn.addEventListener('mouseenter', () => {
      btn.style.transform = 'scale(1.1)';
      btn.style.boxShadow = '0 6px 20px rgba(0,0,0,0.3)';
    });
    
    btn.addEventListener('mouseleave', () => {
      btn.style.transform = 'scale(1)';
      btn.style.boxShadow = '0 4px 12px rgba(0,0,0,0.2)';
    });
    
    btn.addEventListener('click', onClick);
    
    return btn;
  }
  
  setupAutoHide(panel) {
    // –°–∫—Ä—ã–≤–∞–µ–º –Ω–∞ —É–∑–∫–∏—Ö —ç–∫—Ä–∞–Ω–∞—Ö
    const checkVisibility = () => {
      const isNarrow = window.innerWidth < 768;
      const burgerMenu = document.getElementById('burgerMenu');
      const isMenuOpen = burgerMenu && burgerMenu.style.display !== 'none';
      
      if (isNarrow || isMenuOpen) {
        panel.style.opacity = '0';
        panel.style.pointerEvents = 'none';
      } else {
        panel.style.opacity = '0.9';
        panel.style.pointerEvents = 'auto';
      }
    };
    
    window.addEventListener('resize', checkVisibility);
    checkVisibility(); // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ä–∞–∑—É
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏
    setInterval(checkVisibility, 1000);
  }
  
  setupHotkeys() {
    document.addEventListener('keydown', (e) => {
      // –¢–æ–ª—å–∫–æ –µ—Å–ª–∏ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö input/textarea
      if (e.target.tagName === 'INPUT' || e.target.tagName === 'TEXTAREA') return;
      
      if (e.ctrlKey || e.metaKey) {
        switch(e.key) {
          case '1':
            e.preventDefault();
            this.quickAddIncome();
            break;
          case '2':
            e.preventDefault();
            this.quickAddExpense();
            break;
          case 'b':
          case 'B':
            e.preventDefault();
            this.showQuickBalance();
            break;
        }
      }
    });
    
    console.log('‚úÖ –ì–æ—Ä—è—á–∏–µ –∫–ª–∞–≤–∏—à–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã');
  }
  
  quickAddIncome() {
    const amount = prompt('üí∞ –î–æ–±–∞–≤–∏—Ç—å –¥–æ—Ö–æ–¥:\n\n–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É (–Ω–∞–ø—Ä–∏–º–µ—Ä: 1000):');
    if (amount && !isNaN(amount) && parseFloat(amount) > 0) {
      const description = prompt('üìù –û–ø–∏—Å–∞–Ω–∏–µ (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ):') || '–ë—ã—Å—Ç—Ä—ã–π –¥–æ—Ö–æ–¥';
      
      this.addTransaction(parseFloat(amount), 'income', description);
      
      if (typeof window.notificationSystem !== 'undefined') {
        window.notificationSystem.show(`üí∞ –î–æ–±–∞–≤–ª–µ–Ω –¥–æ—Ö–æ–¥: +${amount} z≈Ç`, 'success');
      }
    }
  }
  
  quickAddExpense() {
    const amount = prompt('üí∏ –î–æ–±–∞–≤–∏—Ç—å —Ä–∞—Å—Ö–æ–¥:\n\n–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É (–Ω–∞–ø—Ä–∏–º–µ—Ä: 500):');
    if (amount && !isNaN(amount) && parseFloat(amount) > 0) {
      const description = prompt('üìù –û–ø–∏—Å–∞–Ω–∏–µ (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ):') || '–ë—ã—Å—Ç—Ä—ã–π —Ä–∞—Å—Ö–æ–¥';
      
      this.addTransaction(-parseFloat(amount), 'expense', description);
      
      if (typeof window.notificationSystem !== 'undefined') {
        window.notificationSystem.show(`üí∏ –î–æ–±–∞–≤–ª–µ–Ω —Ä–∞—Å—Ö–æ–¥: -${amount} z≈Ç`, 'success');
      }
    }
  }
  
  addTransaction(amount, type, description) {
    try {
      const transactions = JSON.parse(localStorage.getItem('transactions') || '[]');
      
      const newTransaction = {
        id: Date.now() + Math.random(),
        amount: amount,
        type: type,
        description: description,
        category: type === 'income' ? '–î–æ—Ö–æ–¥—ã' : '–†–∞–∑–Ω–æ–µ',
        date: new Date().toISOString().split('T')[0],
        person: '–°–µ–º—å—è',
        timestamp: new Date().toISOString()
      };
      
      transactions.push(newTransaction);
      localStorage.setItem('transactions', JSON.stringify(transactions));
      
      // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
      if (typeof updateBalance === 'function') {
        updateBalance();
      }
      
      // –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º —Å Firebase
      if (window.firebaseSync && window.firebaseSync.isInitialized) {
        window.firebaseSync.syncToFirebase();
      }
      
      console.log('‚úÖ –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∞:', newTransaction);
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏:', error);
      if (typeof window.notificationSystem !== 'undefined') {
        window.notificationSystem.show('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏', 'error');
      }
    }
  }
  
  showQuickBalance() {
    try {
      const transactions = JSON.parse(localStorage.getItem('transactions') || '[]');
      const balance = transactions.reduce((sum, t) => sum + (parseFloat(t.amount) || 0), 0);
      
      // –ü—Ä–æ—Å—Ç–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å –±–∞–ª–∞–Ω—Å–æ–º
      if (typeof window.notificationSystem !== 'undefined') {
        const message = `üí∞ –¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: ${balance.toFixed(2)} z≈Ç`;
        window.notificationSystem.show(message, 'info', 5000);
      } else {
        // Fallback —á–µ—Ä–µ–∑ alert
        alert(`üí∞ –¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: ${balance.toFixed(2)} z≈Ç`);
      }
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞:', error);
    }
  }
  
  // –í–∫–ª—é—á–∏—Ç—å/–≤—ã–∫–ª—é—á–∏—Ç—å –±—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
  toggle() {
    this.isEnabled = !this.isEnabled;
    
    if (this.isEnabled) {
      this.createFloatingButtons();
      console.log('‚úÖ –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –≤–∫–ª—é—á–µ–Ω—ã');
    } else {
      const panel = document.getElementById('quickActionsPanel');
      if (panel) panel.remove();
      console.log('‚ùå –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –≤—ã–∫–ª—é—á–µ–Ω—ã');
    }
  }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±—ã—Å—Ç—Ä—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π
window.quickActions = new QuickActions();