// ========== FIREBASE –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–Ø ==========

class FirebaseSync {
  constructor() {
    this.isInitialized = false;
    this.isOnline = navigator.onLine;
    this.syncQueue = [];
    this.lastSyncTime = localStorage.getItem('lastSyncTime') || 0;
    this.isDeleting = false; // –§–ª–∞–≥ –¥–ª—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ —Å–ª—É—à–∞—Ç–µ–ª–µ–π –≤–æ –≤—Ä–µ–º—è —É–¥–∞–ª–µ–Ω–∏—è
    this.deletingTransactions = new Set(); // –ú–Ω–æ–∂–µ—Å—Ç–≤–æ ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ —É–¥–∞–ª–µ–Ω–∏—è
    this.balanceUpdateInterval = null; // –ò–Ω—Ç–µ—Ä–≤–∞–ª –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞
    
    // –°–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞–º–∏ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è —É—Ç–µ—á–µ–∫ –ø–∞–º—è—Ç–∏
    this.intervals = new Set();
    this.timeouts = new Set();
    
    // –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Firebase
    // ‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: –í –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ –Ω—É–∂–Ω–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –ø—Ä–∞–≤–∏–ª–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ Firebase!
    // –≠—Ç–∏ –∫–ª—é—á–∏ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∑–∞—â–∏—â–µ–Ω—ã –ø—Ä–∞–≤–∏–ª–∞–º–∏ –≤ Firebase Console
    this.firebaseConfig = {
      apiKey: "AIzaSyGdsK93LaWhRGo6PoesvlNAg3jPmntXsQAu",
      authDomain: "budget-ami.firebaseapp.com", 
      databaseURL: "https://budget-ami-default-rtdb.europe-west1.firebasedatabase.app",
      projectId: "budget-ami",
      storageBucket: "budget-ami.firebasestorage.app",
      messagingSenderId: "976854941281",
      appId: "1:976854941281:web:f40e81033cf52d236af420"
    };
    
    // –ê–≤—Ç–æ–æ—á–∏—Å—Ç–∫–∞ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    window.addEventListener('beforeunload', () => this.cleanup());
    
    this.init();
  }
  
  // –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–≤ —Å –∞–≤—Ç–æ–æ—á–∏—Å—Ç–∫–æ–π
  setManagedInterval(callback, delay) {
    const intervalId = setInterval(callback, delay);
    this.intervals.add(intervalId);
    return intervalId;
  }
  
  // –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–π–º–∞—É—Ç–æ–≤ —Å –∞–≤—Ç–æ–æ—á–∏—Å—Ç–∫–æ–π
  setManagedTimeout(callback, delay) {
    const timeoutId = setTimeout(() => {
      this.timeouts.delete(timeoutId);
      callback();
    }, delay);
    this.timeouts.add(timeoutId);
    return timeoutId;
  }
  
  // –û—á–∏—Å—Ç–∫–∞ –≤—Å–µ—Ö –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–≤ –∏ —Ç–∞–π–º–∞—É—Ç–æ–≤
  cleanup() {
    this.intervals.forEach(intervalId => clearInterval(intervalId));
    this.timeouts.forEach(timeoutId => clearTimeout(timeoutId));
    this.intervals.clear();
    this.timeouts.clear();
    console.log('üßπ –û—á–∏—Å—Ç–∫–∞ –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
  }

  async init() {
    // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ Firebase SDK
    let attempts = 0;
    while (typeof firebase === 'undefined' && attempts < 10) {
      console.log('‚è≥ –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫—É Firebase SDK... –ü–æ–ø—ã—Ç–∫–∞:', attempts + 1);
      await new Promise(resolve => setTimeout(resolve, 500));
      attempts++;
    }
    
    if (typeof firebase === 'undefined') {
      console.error('‚ùå Firebase SDK –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω –ø–æ—Å–ª–µ 10 –ø–æ–ø—ã—Ç–æ–∫');
      this.showSyncStatus('error', '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ Firebase SDK');
      return false;
    }
    
    try {
      // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Firebase
      if (!firebase.apps.length) {
        firebase.initializeApp(this.firebaseConfig);
        console.log('‚úÖ Firebase –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ');
      } else {
        console.log('‚ÑπÔ∏è Firebase —É–∂–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
      }
      
      this.database = firebase.database();
      this.isInitialized = true;
      
      console.log('üî• Firebase –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
      console.log('üìä Firebase config:', this.firebaseConfig);
      console.log('üåê Database URL:', this.database.ref().toString());
      
      // –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –æ–Ω–ª–∞–π–Ω —Å—Ç–∞—Ç—É—Å–∞
      window.addEventListener('online', () => this.handleOnlineChange(true));
      window.addEventListener('offline', () => this.handleOnlineChange(false));
      
      // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å–ª—É—à–∞—Ç–µ–ª–∏ –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤
      document.addEventListener('visibilitychange', () => {
        if (!document.hidden) {
          console.log('üì± –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤–µ—Ä–Ω—É–ª–æ—Å—å –≤ —Ñ–æ–∫—É—Å - –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è');
          this.forcSync();
        }
      });
      
      // –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å Firebase
      this.startHeartbeat();
      
      // –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
      this.setupDataListeners();
      
      // –ü–µ—Ä–≤–∏—á–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è
      if (this.isOnline) {
        await this.syncToFirebase();
      }
      
      // –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞
      this.startBalanceAutoUpdate();
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Firebase:', error);
      this.showSyncStatus('error', '–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É. –†–∞–±–æ—Ç–∞–µ–º –≤ –ª–æ–∫–∞–ª—å–Ω–æ–º —Ä–µ–∂–∏–º–µ.');
      
      // –í–∫–ª—é—á–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π —Ä–µ–∂–∏–º –±–µ–∑ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
      this.isInitialized = false;
      
      // –ù–æ –≤—Å–µ —Ä–∞–≤–Ω–æ –∑–∞–ø—É—Å–∫–∞–µ–º –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞
      this.startBalanceAutoUpdate();
      
      return false;
    }
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ Firebase
  checkFirebaseAvailability() {
    if (typeof firebase === 'undefined') {
      console.log('üîÑ Firebase –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –ø—Ä–æ–±—É–µ–º –∑–∞–≥—Ä—É–∑–∏—Ç—å –ø–æ–≤—Ç–æ—Ä–Ω–æ...');
      
      // –ü–æ–ø—ã—Ç–∫–∞ –∑–∞–≥—Ä—É–∑–∏—Ç—å Firebase –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏
      const script1 = document.createElement('script');
      script1.src = 'https://www.gstatic.com/firebasejs/9.22.0/firebase-app-compat.js';
      script1.onload = () => {
        const script2 = document.createElement('script');
        script2.src = 'https://www.gstatic.com/firebasejs/9.22.0/firebase-database-compat.js';
        script2.onload = () => {
          console.log('‚úÖ Firebase –∑–∞–≥—Ä—É–∂–µ–Ω –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏');
          this.init(); // –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
        };
        document.head.appendChild(script2);
      };
      document.head.appendChild(script1);
      return false;
    }
    return true;
  }

  // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  getUserId() {
    let userId = localStorage.getItem('userId');
    if (!userId) {
      userId = 'user_' + Date.now() + '_' + Math.random().toString(36).substr(2, 9);
      localStorage.setItem('userId', userId);
    }
    return userId;
  }

  // –ü–æ–ª—É—á–µ–Ω–∏–µ ID —Å–µ–º—å–∏ (–æ–±—â–∞—è –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö)
  getFamilyId() {
    let familyId = localStorage.getItem('familyId');
    if (!familyId) {
      // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–æ–≤—ã–π ID –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
      familyId = 'family_' + Date.now().toString(36);
      localStorage.setItem('familyId', familyId);
      console.log('üè† –°–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π Family ID:', familyId);
      this.showSyncStatus('success', `–ù–æ–≤–∞—è —Å–µ–º—å—è: ${familyId}`);
    }
    return familyId;
  }

  // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–ª—É—à–∞—Ç–µ–ª–µ–π –∏–∑–º–µ–Ω–µ–Ω–∏–π
  setupDataListeners() {
    if (!this.isInitialized) return;

    const familyId = this.getFamilyId();
    const familyRef = this.database.ref(`families/${familyId}`);
    
    console.log('üëÇ –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Å–ª—É—à–∞—Ç–µ–ª–∏ –¥–ª—è —Å–µ–º—å–∏:', familyId);

    // –°–ª—É—à–∞—Ç–µ–ª—å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º–∏ –ø—Ä–æ–≤–µ—Ä–∫–∞–º–∏
    familyRef.child('transactions').on('value', (snapshot) => {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ª–∏ —Å–µ–π—á–∞—Å —É–¥–∞–ª–µ–Ω–∏–µ
      if (this.isDeleting) {
        console.log('‚è∏Ô∏è –°–ª—É—à–∞—Ç–µ–ª—å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω - –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è —É–¥–∞–ª–µ–Ω–∏–µ');
        return;
      }
      
      const firebaseTransactions = snapshot.val() || {};
      const timestamp = new Date().toLocaleTimeString();
      console.log(`üì• [${timestamp}] –ü–æ–ª—É—á–µ–Ω—ã —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –∏–∑ Firebase:`, Object.keys(firebaseTransactions).length);
      console.log('üîç Firebase data structure:', firebaseTransactions);
      
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–≥–Ω–æ–≤–µ–Ω–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
      if (Object.keys(firebaseTransactions).length > 0) {
        this.showSyncStatus('success', `–û–±–Ω–æ–≤–ª–µ–Ω–æ –≤ ${timestamp}`);
      }
      
      this.mergeTransactions(firebaseTransactions);
      
      // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ –ø–æ—Å–ª–µ –∫–∞–∂–¥–æ–≥–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è
      setTimeout(() => {
        if (window.updateDashboard) {
          window.updateDashboard();
          console.log('üí∞ –î–∞—à–±–æ—Ä–¥ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω');
        }
        if (window.calculateBalance) {
          window.calculateBalance();
          console.log('üí∞ –ë–∞–ª–∞–Ω—Å –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø–µ—Ä–µ—Å—á–∏—Ç–∞–Ω');
        }
      }, 100);
    }, (error) => {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Å–ª—É—à–∞—Ç–µ–ª—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π:', error);
      this.showSyncStatus('error', '–û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π');
      // –ü—ã—Ç–∞–µ–º—Å—è –ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
      setTimeout(() => {
        console.log('üîÑ –ü–æ–ø—ã—Ç–∫–∞ –ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è —Å–ª—É—à–∞—Ç–µ–ª—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π...');
        this.setupDataListeners();
      }, 5000);
    });

    // –°–ª—É—à–∞—Ç–µ–ª—å —Ü–µ–ª–µ–π
    familyRef.child('goals').on('value', (snapshot) => {
      const firebaseGoals = snapshot.val() || {};
      console.log('üì• –ü–æ–ª—É—á–µ–Ω—ã —Ü–µ–ª–∏ –∏–∑ Firebase:', Object.keys(firebaseGoals).length);
      this.mergeGoals(firebaseGoals);
    });

    // –°–ª—É—à–∞—Ç–µ–ª—å –∫–∞—Ç–µ–≥–æ—Ä–∏–π
    familyRef.child('categories').on('value', (snapshot) => {
      const firebaseCategories = snapshot.val() || {};
      console.log('üì• –ü–æ–ª—É—á–µ–Ω—ã –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏–∑ Firebase:', Object.keys(firebaseCategories).length);
      this.mergeCategories(firebaseCategories);
    });

    // –°–ª—É—à–∞—Ç–µ–ª—å —É–¥–∞–ª–µ–Ω–Ω—ã—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π (–ù–ï –±–ª–æ–∫–∏—Ä—É–µ—Ç—Å—è –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏)
    familyRef.child('deletedTransactions').on('value', (snapshot) => {
      const firebaseDeleted = snapshot.val() || {};
      console.log('üóëÔ∏è –ü–æ–ª—É—á–µ–Ω—ã —É–¥–∞–ª–µ–Ω–Ω—ã–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –∏–∑ Firebase:', Object.keys(firebaseDeleted).length);
      
      // –≠—Ç–æ—Ç —Å–ª—É—à–∞—Ç–µ–ª—å –≤—Å–µ–≥–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç, –¥–∞–∂–µ –≤–æ –≤—Ä–µ–º—è —É–¥–∞–ª–µ–Ω–∏—è
      this.mergeDeletedTransactions(firebaseDeleted);
    });

    console.log('üëÇ –°–ª—É—à–∞—Ç–µ–ª–∏ –¥–∞–Ω–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã');
  }

  // –ó–∞–ø—É—Å–∫ –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
  startHeartbeat() {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥ —Å —É–ø—Ä–∞–≤–ª—è–µ–º—ã–º –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–º
    this.heartbeatInterval = this.setManagedInterval(() => {
      if (this.isInitialized && this.isOnline) {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Firebase
        const connectedRef = this.database.ref('.info/connected');
        connectedRef.once('value', (snapshot) => {
          if (snapshot.val() === true) {
            // –£–º–µ–Ω—å—à–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª–æ–≥–æ–≤ –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ
            if (Math.random() < 0.1) console.log('üíì Heartbeat: —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ');
          } else {
            console.log('üíî Heartbeat: —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –ø–æ—Ç–µ—Ä—è–Ω–æ');
            this.showSyncStatus('offline', '–ü–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ...');
            // –ü—ã—Ç–∞–µ–º—Å—è –ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è
            this.setManagedTimeout(() => this.forcSync(), 1000);
          }
        }).catch((error) => {
          console.log('üíî Heartbeat: –æ—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è', error);
          this.showSyncStatus('error', '–ü—Ä–æ–±–ª–µ–º—ã —Å —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ–º');
        });
      }
    }, 30000); // –ö–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥
    
    console.log('üíì Heartbeat –∑–∞–ø—É—â–µ–Ω (–ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥—ã–µ 30 —Å–µ–∫)');
  }

  // –û—Å—Ç–∞–Ω–æ–≤–∫–∞ heartbeat
  stopHeartbeat() {
    if (this.heartbeatInterval) {
      clearInterval(this.heartbeatInterval);
      this.heartbeatInterval = null;
      console.log('üíî Heartbeat –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
    }
  }

  // –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞
  startBalanceAutoUpdate() {
    console.log('üîÑ –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞...');
    
    // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π –∏–Ω—Ç–µ—Ä–≤–∞–ª –µ—Å–ª–∏ –µ—Å—Ç—å
    this.stopBalanceAutoUpdate();
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å –∫–∞–∂–¥—ã–µ 1.5 —Å–µ–∫—É–Ω–¥—ã —Å —É–ø—Ä–∞–≤–ª—è–µ–º—ã–º –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–º
    this.balanceUpdateInterval = this.setManagedInterval(() => {
      this.updateBalance();
    }, 1500);
    
    console.log('üí∞ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ –∑–∞–ø—É—â–µ–Ω–æ (–∫–∞–∂–¥—ã–µ 1.5 —Å–µ–∫)');
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    this.showBalanceAutoUpdateIndicator(true);
    
    // –í—ã–ø–æ–ª–Ω—è–µ–º –ø–µ—Ä–≤–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ä–∞–∑—É
    this.setManagedTimeout(() => {
      this.updateBalance();
    }, 100);
  }

  // –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞
  stopBalanceAutoUpdate() {
    if (this.balanceUpdateInterval) {
      clearInterval(this.balanceUpdateInterval);
      this.balanceUpdateInterval = null;
      console.log('üí∞ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');
      
      // –°–∫—Ä—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
      this.showBalanceAutoUpdateIndicator(false);
    }
  }

  // –ü–æ–∫–∞–∑/—Å–∫—Ä—ã—Ç–∏–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
  showBalanceAutoUpdateIndicator(show) {
    let indicator = document.getElementById('balanceAutoUpdateIndicator');
    
    if (show) {
      if (!indicator) {
        indicator = document.createElement('div');
        indicator.id = 'balanceAutoUpdateIndicator';
        indicator.style.position = 'fixed';
        indicator.style.bottom = '10px';
        indicator.style.right = '10px';
        indicator.style.zIndex = '9999';
        indicator.style.padding = '5px 10px';
        indicator.style.borderRadius = '15px';
        indicator.style.fontSize = '11px';
        indicator.style.backgroundColor = '#4CAF50';
        indicator.style.color = 'white';
        indicator.style.fontWeight = 'bold';
        indicator.style.transition = 'all 0.3s ease';
        indicator.style.opacity = '0.7';
        indicator.innerHTML = 'üîÑ –ê–≤—Ç–æ-–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ';
        document.body.appendChild(indicator);
      }
      indicator.style.display = 'block';
    } else {
      if (indicator) {
        indicator.style.display = 'none';
      }
    }
  }

  // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ –∏ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
  updateBalance() {
    console.log('üîÑ –ù–∞—á–∏–Ω–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞...');
    let updatesExecuted = 0;
    
    try {
      // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞—à–±–æ—Ä–¥ –µ—Å–ª–∏ —Ñ—É–Ω–∫—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞
      if (typeof window.updateDashboard === 'function') {
        console.log('üìä –í—ã–∑—ã–≤–∞–µ–º updateDashboard()');
        window.updateDashboard();
        updatesExecuted++;
      } else {
        console.log('‚ö†Ô∏è updateDashboard –Ω–µ –Ω–∞–π–¥–µ–Ω');
      }
      
      // –ü–µ—Ä–µ—Å—á–∏—Ç—ã–≤–∞–µ–º –±–∞–ª–∞–Ω—Å –µ—Å–ª–∏ —Ñ—É–Ω–∫—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞  
      if (typeof window.calculateBalance === 'function') {
        console.log('üßÆ –í—ã–∑—ã–≤–∞–µ–º calculateBalance()');
        window.calculateBalance();
        updatesExecuted++;
      } else {
        console.log('‚ö†Ô∏è calculateBalance –Ω–µ –Ω–∞–π–¥–µ–Ω');
      }
      
      // –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å –µ—Å–ª–∏ —Ñ—É–Ω–∫—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞
      if (typeof window.updateBalance === 'function') {
        console.log('üí∞ –í—ã–∑—ã–≤–∞–µ–º updateBalance()');
        window.updateBalance();
        updatesExecuted++;
      } else {
        console.log('‚ö†Ô∏è updateBalance –Ω–µ –Ω–∞–π–¥–µ–Ω');
      }
      
      // –û–±–Ω–æ–≤–ª—è–µ–º –∏—Å—Ç–æ—Ä–∏—é —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –µ—Å–ª–∏ —Ñ—É–Ω–∫—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞
      if (typeof window.renderTransactionHistory === 'function') {
        console.log('üìã –í—ã–∑—ã–≤–∞–µ–º renderTransactionHistory()');
        window.renderTransactionHistory();
        updatesExecuted++;
      } else {
        console.log('‚ö†Ô∏è renderTransactionHistory –Ω–µ –Ω–∞–π–¥–µ–Ω');
      }
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–±—ã—Ç–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
      window.dispatchEvent(new Event('balanceUpdated'));
      console.log('üì° –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–±—ã—Ç–∏–µ balanceUpdated');
      
      console.log(`‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–æ. –í—ã–ø–æ–ª–Ω–µ–Ω–æ —Ñ—É–Ω–∫—Ü–∏–π: ${updatesExecuted}`);
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞:', error);
    }
  }

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ç–∏
  handleOnlineChange(isOnline) {
    this.isOnline = isOnline;
    
    if (isOnline) {
      console.log('üåê –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');
      this.showSyncStatus('syncing', '–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è...');
      this.syncToFirebase();
    } else {
      console.log('üìµ –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –ø–æ—Ç–µ—Ä—è–Ω–æ');
      this.showSyncStatus('offline', '–û—Ñ–ª–∞–π–Ω —Ä–µ–∂–∏–º');
    }
  }

  // –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –ª–æ–∫–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö —Å Firebase
  async syncToFirebase() {
    if (!this.checkFirebaseAvailability()) {
      console.log('‚ö†Ô∏è Firebase –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω');
      return;
    }
    
    if (!this.isInitialized || !this.isOnline) {
      console.log('‚ö†Ô∏è –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –ø—Ä–æ–ø—É—â–µ–Ω–∞ - –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –∏–ª–∏ –æ—Ñ–ª–∞–π–Ω');
      console.log('Debug: isInitialized=', this.isInitialized, 'isOnline=', this.isOnline);
      return;
    }

    try {
      const familyId = this.getFamilyId();
      const userId = this.getUserId();
      const timestamp = Date.now();
      
      console.log('üîÑ –ù–∞—á–∏–Ω–∞–µ–º —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é...');
      console.log('üë®‚Äçüë©‚Äçüëß‚Äçüë¶ Family ID:', familyId);
      console.log('üë§ User ID:', userId);

      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ (–∏—Å–∫–ª—é—á–∞—è —É–¥–∞–ª–µ–Ω–Ω—ã–µ)
      const allTransactions = JSON.parse(localStorage.getItem('transactions')) || [];
      const deletedList = JSON.parse(localStorage.getItem('deletedTransactions')) || [];
      
      // –§–∏–ª—å—Ç—Ä—É–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏, –∏—Å–∫–ª—é—á–∞—è —É–¥–∞–ª–µ–Ω–Ω—ã–µ
      const transactions = allTransactions.filter(transaction => {
        const isDeleted = deletedList.includes(transaction.id) || 
                         deletedList.includes(transaction.firebaseId);
        const isDeleting = this.deletingTransactions.has(transaction.id) || 
                          this.deletingTransactions.has(transaction.firebaseId);
        
        if (isDeleted || isDeleting) {
          console.log('ÔøΩÔ∏è –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —É–¥–∞–ª–µ–Ω–Ω—É—é/—É–¥–∞–ª—è–µ–º—É—é —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é –ø—Ä–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏:', transaction.id);
          return false;
        }
        return true;
      });
      
      console.log('üí∞ –í—Å–µ–≥–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π:', allTransactions.length);
      console.log('üóëÔ∏è –ò—Å–∫–ª—é—á–µ–Ω–æ —É–¥–∞–ª–µ–Ω–Ω—ã—Ö:', allTransactions.length - transactions.length);
      console.log('üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π:', transactions.length);
      
      if (transactions.length > 0) {
        const transactionsRef = this.database.ref(`families/${familyId}/transactions`);
        const sendTime = new Date().toLocaleTimeString();
        console.log(`üì§ [${sendTime}] –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ Firebase:`, transactionsRef.toString());
        
        let hasNewTransactions = false;
        
        for (const transaction of transactions) {
          try {
            if (!transaction.firebaseId) {
              transaction.firebaseId = transactionsRef.push().key;
              transaction.syncedAt = timestamp;
              transaction.userId = userId;
              hasNewTransactions = true;
              console.log(`‚ûï [${sendTime}] –ù–æ–≤–∞—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è:`, transaction.firebaseId, transaction.amount, transaction.description);
            }
            await transactionsRef.child(transaction.firebaseId).set(transaction);
            console.log(`‚úÖ –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞:`, transaction.firebaseId);
          } catch (error) {
            console.error(`‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ ${transaction.id}:`, error);
          }
        }
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ —Å firebaseId –≤ localStorage
        if (hasNewTransactions) {
          // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ –±—ã–ª–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã
          const updatedAllTransactions = allTransactions.map(t => {
            const sentTransaction = transactions.find(st => st.id === t.id);
            return sentTransaction || t;
          });
          localStorage.setItem('transactions', JSON.stringify(updatedAllTransactions));
          console.log('üíæ –õ–æ–∫–∞–ª—å–Ω—ã–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã —Å firebaseId');
        }
        
        this.showSyncStatus('success', `–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ ${sendTime}`);
      }

      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ü–µ–ª–∏
      const goals = JSON.parse(localStorage.getItem('goals')) || [];
      if (goals.length > 0) {
        const goalsRef = this.database.ref(`families/${familyId}/goals`);
        for (const goal of goals) {
          if (!goal.firebaseId) {
            goal.firebaseId = goalsRef.push().key;
            goal.syncedAt = timestamp;
            goal.userId = userId;
          }
          await goalsRef.child(goal.firebaseId).set(goal);
        }
      }

      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
      const categories = JSON.parse(localStorage.getItem('categories')) || [];
      if (categories.length > 0) {
        const categoriesRef = this.database.ref(`families/${familyId}/categories`);
        for (const category of categories) {
          if (!category.firebaseId) {
            category.firebaseId = categoriesRef.push().key;
            category.syncedAt = timestamp;
            category.userId = userId;
          }
          await categoriesRef.child(category.firebaseId).set(category);
        }
      }

      // –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ —É–¥–∞–ª–µ–Ω–Ω—ã—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
      if (deletedList.length > 0) {
        const deletedRef = this.database.ref(`families/${familyId}/deletedTransactions`);
        for (const deletedId of deletedList) {
          await deletedRef.child(deletedId).set({
            deletedAt: timestamp,
            deletedBy: userId
          });
        }
        console.log('üóëÔ∏è –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω —Å–ø–∏—Å–æ–∫ —É–¥–∞–ª–µ–Ω–Ω—ã—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π:', deletedList.length);
      }

      this.lastSyncTime = timestamp;
      localStorage.setItem('lastSyncTime', this.lastSyncTime);
      
      this.showSyncStatus('success', '–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–æ');
      console.log('‚úÖ –î–∞–Ω–Ω—ã–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã —Å Firebase');

    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏:', error);
      this.showSyncStatus('error', '–û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏');
    }
  }

  // –û–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
  mergeTransactions(firebaseTransactions) {
    const localTransactions = JSON.parse(localStorage.getItem('transactions')) || [];
    const deletedTransactions = JSON.parse(localStorage.getItem('deletedTransactions')) || [];
    
    console.log('üîÑ –ù–∞—á–∏–Ω–∞–µ–º –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π...');
    console.log('üì± –õ–æ–∫–∞–ª—å–Ω—ã—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π:', localTransactions.length);
    console.log('‚òÅÔ∏è Firebase —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π:', Object.keys(firebaseTransactions).length);
    console.log('üóëÔ∏è –£–¥–∞–ª–µ–Ω–Ω—ã—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π:', deletedTransactions.length);
    console.log('‚ö†Ô∏è –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ —É–¥–∞–ª–µ–Ω–∏—è:', Array.from(this.deletingTransactions));

    // –°–Ω–∞—á–∞–ª–∞ —É–¥–∞–ª—è–µ–º –∏–∑ Firebase –≤—Å–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ –µ—Å—Ç—å –≤ —Å–ø–∏—Å–∫–µ —É–¥–∞–ª–µ–Ω–Ω—ã—Ö
    this.cleanupFirebaseFromDeleted(firebaseTransactions, deletedTransactions);

    // –ù–∞—á–∏–Ω–∞–µ–º —Å –ª–æ–∫–∞–ª—å–Ω—ã—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
    let mergedTransactions = [...localTransactions];

    // –ü—Ä–æ—Ö–æ–¥–∏–º –ø–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è–º –∏–∑ Firebase
    Object.values(firebaseTransactions).forEach(firebaseTransaction => {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –±—ã–ª–∞ –ª–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è —É–¥–∞–ª–µ–Ω–∞ –ª–æ–∫–∞–ª—å–Ω–æ
      const isDeletedByFirebaseId = deletedTransactions.includes(firebaseTransaction.firebaseId);
      const isDeletedById = deletedTransactions.includes(firebaseTransaction.id);
      const isCurrentlyDeleting = this.deletingTransactions.has(firebaseTransaction.firebaseId) || 
                                 this.deletingTransactions.has(firebaseTransaction.id);
      
      if (isDeletedByFirebaseId || isDeletedById) {
        console.log('üóëÔ∏è –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —É–¥–∞–ª–µ–Ω–Ω—É—é —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é:', firebaseTransaction.firebaseId || firebaseTransaction.id);
        return; // –ù–µ –¥–æ–±–∞–≤–ª—è–µ–º —É–¥–∞–ª–µ–Ω–Ω—ã–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
      }
      
      if (isCurrentlyDeleting) {
        console.log('‚è∏Ô∏è –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ —É–¥–∞–ª–µ–Ω–∏—è:', firebaseTransaction.firebaseId || firebaseTransaction.id);
        return; // –ù–µ –¥–æ–±–∞–≤–ª—è–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ —É–¥–∞–ª–µ–Ω–∏—è
      }

      const existingIndex = mergedTransactions.findIndex(
        t => t.firebaseId === firebaseTransaction.firebaseId || 
             t.id === firebaseTransaction.id ||
             (t.firebaseId && t.firebaseId === firebaseTransaction.firebaseId)
      );

      if (existingIndex === -1) {
        // –ù–æ–≤–∞—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è —Å —Å–µ—Ä–≤–µ—Ä–∞
        console.log('‚ûï –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é —Å —Å–µ—Ä–≤–µ—Ä–∞:', firebaseTransaction.firebaseId || firebaseTransaction.id);
        mergedTransactions.push(firebaseTransaction);
      } else if (firebaseTransaction.syncedAt && firebaseTransaction.syncedAt > (mergedTransactions[existingIndex].syncedAt || 0)) {
        // –û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è —Å —Å–µ—Ä–≤–µ—Ä–∞ (–±–æ–ª–µ–µ –Ω–æ–≤–∞—è)
        console.log('üîÑ –û–±–Ω–æ–≤–ª—è–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é —Å —Å–µ—Ä–≤–µ—Ä–∞:', firebaseTransaction.firebaseId || firebaseTransaction.id);
        mergedTransactions[existingIndex] = firebaseTransaction;
      } else {
        console.log('‚è≠Ô∏è –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —É—Å—Ç–∞—Ä–µ–≤—à—É—é —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é —Å —Å–µ—Ä–≤–µ—Ä–∞:', firebaseTransaction.firebaseId || firebaseTransaction.id);
      }
    });

    console.log('‚úÖ –ò—Ç–æ–≥–æ –ø–æ—Å–ª–µ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è:', mergedTransactions.length, '—Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π');
    localStorage.setItem('transactions', JSON.stringify(mergedTransactions));
    
    // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
    if (window.renderTransactionHistory) {
      window.renderTransactionHistory();
    }
    if (window.updateDashboard) {
      window.updateDashboard();
    }
    
    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–ª—è –ø–æ–ª–Ω–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
    if (window.updateBalance) {
      window.updateBalance();
    }
    if (window.calculateBalance) {
      window.calculateBalance();
    }
    
    // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ —Å–æ–±—ã—Ç–∏–µ
    window.dispatchEvent(new Event('transactionsUpdated'));
    
    console.log('üîÑ –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω –ø–æ—Å–ª–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏');
  }

  // –£–¥–∞–ª–µ–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –∏–∑ Firebase
  async deleteTransactionFromFirebase(transactionId, firebaseId) {
    console.log('üîç deleteTransactionFromFirebase –≤—ã–∑–≤–∞–Ω–∞ —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏:', { transactionId, firebaseId });
    
    if (!this.isInitialized) {
      console.log('‚ö†Ô∏è Firebase –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω, —É–¥–∞–ª–µ–Ω–∏–µ –æ—Ç–ª–æ–∂–µ–Ω–æ');
      return;
    }
    
    if (!this.isOnline) {
      console.log('‚ö†Ô∏è –ù–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É, —É–¥–∞–ª–µ–Ω–∏–µ –æ—Ç–ª–æ–∂–µ–Ω–æ');
      return;
    }

    try {
      // –ë–ª–æ–∫–∏—Ä—É–µ–º —Å–ª—É—à–∞—Ç–µ–ª–∏ –Ω–∞ –≤—Ä–µ–º—è —É–¥–∞–ª–µ–Ω–∏—è
      this.isDeleting = true;
      
      // –î–æ–±–∞–≤–ª—è–µ–º ID –≤ –º–Ω–æ–∂–µ—Å—Ç–≤–æ —É–¥–∞–ª—è–µ–º—ã—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
      if (firebaseId) this.deletingTransactions.add(firebaseId);
      if (transactionId) this.deletingTransactions.add(transactionId);
      
      const familyId = this.getFamilyId();
      console.log('üë®‚Äçüë©‚Äçüëß‚Äçüë¶ Family ID –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è:', familyId);
      
      console.log('üóëÔ∏è –ù–∞—á–∏–Ω–∞–µ–º —É–¥–∞–ª–µ–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏:', { transactionId, firebaseId });
      
      // –î–æ–±–∞–≤–ª—è–µ–º –≤ —Å–ø–∏—Å–æ–∫ —É–¥–∞–ª–µ–Ω–Ω—ã—Ö –ª–æ–∫–∞–ª—å–Ω–æ
      const deletedTransactions = JSON.parse(localStorage.getItem('deletedTransactions')) || [];
      let needsSync = false;
      
      if (firebaseId && !deletedTransactions.includes(firebaseId)) {
        deletedTransactions.push(firebaseId);
        console.log('üóëÔ∏è –î–æ–±–∞–≤–ª–µ–Ω –≤ —Å–ø–∏—Å–æ–∫ —É–¥–∞–ª–µ–Ω–Ω—ã—Ö (firebaseId):', firebaseId);
        needsSync = true;
      }
      if (transactionId && !deletedTransactions.includes(transactionId)) {
        deletedTransactions.push(transactionId);
        console.log('üóëÔ∏è –î–æ–±–∞–≤–ª–µ–Ω –≤ —Å–ø–∏—Å–æ–∫ —É–¥–∞–ª–µ–Ω–Ω—ã—Ö (id):', transactionId);
        needsSync = true;
      }
      
      localStorage.setItem('deletedTransactions', JSON.stringify(deletedTransactions));
      
      // –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ —É–¥–∞–ª–µ–Ω–Ω—ã—Ö —Å Firebase
      if (needsSync) {
        const deletedRef = this.database.ref(`families/${familyId}/deletedTransactions`);
        const timestamp = Date.now();
        const userId = this.getUserId();
        
        if (firebaseId) {
          await deletedRef.child(firebaseId).set({
            deletedAt: timestamp,
            deletedBy: userId
          });
        }
        if (transactionId) {
          await deletedRef.child(transactionId).set({
            deletedAt: timestamp,
            deletedBy: userId
          });
        }
        console.log('‚òÅÔ∏è –°–ø–∏—Å–æ–∫ —É–¥–∞–ª–µ–Ω–Ω—ã—Ö —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω —Å Firebase');
      }
      
      // –£–¥–∞–ª—è–µ–º –∏–∑ Firebase
      if (firebaseId) {
        const transactionRef = this.database.ref(`families/${familyId}/transactions/${firebaseId}`);
        console.log('üî• –£–¥–∞–ª—è–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é –∏–∑ Firebase –ø–æ firebaseId:', transactionRef.toString());
        await transactionRef.remove();
        console.log('‚úÖ –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è —É–¥–∞–ª–µ–Ω–∞ –∏–∑ Firebase:', firebaseId);
      }
      
      // –ï—Å–ª–∏ –Ω–µ—Ç firebaseId, –∏—â–µ–º –ø–æ –¥—Ä—É–≥–∏–º –ø–æ–ª—è–º
      if (!firebaseId && transactionId) {
        console.log('üîç firebaseId –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç, –∏—â–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é –ø–æ ID:', transactionId);
        const transactionsRef = this.database.ref(`families/${familyId}/transactions`);
        const snapshot = await transactionsRef.once('value');
        const allTransactions = snapshot.val() || {};
        
        console.log('üìã –í—Å–µ–≥–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –≤ Firebase:', Object.keys(allTransactions).length);
        
        // –ò—â–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é –ø–æ –ª–æ–∫–∞–ª—å–Ω–æ–º—É ID
        for (const [fbId, transaction] of Object.entries(allTransactions)) {
          if (transaction.id === transactionId) {
            console.log('üéØ –ù–∞–π–¥–µ–Ω–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è:', fbId, transaction);
            await transactionsRef.child(fbId).remove();
            console.log('‚úÖ –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –Ω–∞–π–¥–µ–Ω–∞ –∏ —É–¥–∞–ª–µ–Ω–∞ –∏–∑ Firebase –ø–æ ID:', fbId);
            
            // –î–æ–±–∞–≤–ª—è–µ–º –∏ —ç—Ç–æ—Ç firebaseId –≤ —Å–ø–∏—Å–æ–∫ —É–¥–∞–ª–µ–Ω–Ω—ã—Ö
            if (!deletedTransactions.includes(fbId)) {
              deletedTransactions.push(fbId);
              localStorage.setItem('deletedTransactions', JSON.stringify(deletedTransactions));
            }
            break;
          }
        }
      }
      
      // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º –≤—Å–µ —Å–ª—É—à–∞—Ç–µ–ª–∏ –¥–ª—è –º–≥–Ω–æ–≤–µ–Ω–Ω–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
      this.showSyncStatus('success', '–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è —É–¥–∞–ª–µ–Ω–∞');
      
      // –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —É–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–æ—à–ª–æ —É—Å–ø–µ—à–Ω–æ
      setTimeout(async () => {
        try {
          console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ø–µ—à–Ω–æ—Å—Ç—å —É–¥–∞–ª–µ–Ω–∏—è...');
          const checkRef = this.database.ref(`families/${familyId}/transactions`);
          const checkSnapshot = await checkRef.once('value');
          const remainingTransactions = checkSnapshot.val() || {};
          
          let found = false;
          for (const [fbId, transaction] of Object.entries(remainingTransactions)) {
            if (transaction.id === transactionId || fbId === firebaseId) {
              found = true;
              console.log('‚ö†Ô∏è –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –≤—Å–µ –µ—â–µ –µ—Å—Ç—å –≤ Firebase, –ø—ã—Ç–∞–µ–º—Å—è —É–¥–∞–ª–∏—Ç—å —Å–Ω–æ–≤–∞:', fbId);
              await checkRef.child(fbId).remove();
              break;
            }
          }
          
          if (!found) {
            console.log('‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ: —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞ –∏–∑ Firebase');
          } else {
            console.log('‚ö†Ô∏è –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –≤—Å–µ –µ—â–µ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ Firebase –ø–æ—Å–ª–µ –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è');
          }
        } catch (error) {
          console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —É–¥–∞–ª–µ–Ω–∏—è:', error);
        }
      }, 1000);
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∏–∑ Firebase:', error);
      this.showSyncStatus('error', '–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è: ' + error.message);
    } finally {
      // –°–Ω–∏–º–∞–µ–º –±–ª–æ–∫–∏—Ä–æ–≤–∫—É —Å–ª—É—à–∞—Ç–µ–ª–µ–π —á–µ—Ä–µ–∑ 1 —Å–µ–∫—É–Ω–¥—É (–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è)
      setTimeout(() => {
        this.isDeleting = false;
        // –û—á–∏—â–∞–µ–º –º–Ω–æ–∂–µ—Å—Ç–≤–æ —É–¥–∞–ª—è–µ–º—ã—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
        if (firebaseId) this.deletingTransactions.delete(firebaseId);
        if (transactionId) this.deletingTransactions.delete(transactionId);
        console.log('üîì –°–ª—É—à–∞—Ç–µ–ª–∏ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è');
        
        // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø—Ä–æ–≤–µ—Ä—è–µ–º —É–¥–∞–ª–µ–Ω–Ω—ã–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –Ω–∞ –¥—Ä—É–≥–∏—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö
        setTimeout(() => {
          console.log('üîÑ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —É–¥–∞–ª–µ–Ω–Ω—ã—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π...');
          if (this.isInitialized && this.isOnline) {
            const familyId = this.getFamilyId();
            const deletedRef = this.database.ref(`families/${familyId}/deletedTransactions`);
            deletedRef.once('value', (snapshot) => {
              const firebaseDeleted = snapshot.val() || {};
              this.mergeDeletedTransactions(firebaseDeleted);
            });
          }
        }, 500);
      }, 1000);
    }
  }

  // –û—á–∏—Å—Ç–∫–∞ Firebase –æ—Ç —É–¥–∞–ª–µ–Ω–Ω—ã—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
  async cleanupFirebaseFromDeleted(firebaseTransactions, deletedTransactions) {
    if (!this.isInitialized || !this.isOnline || deletedTransactions.length === 0) {
      return;
    }

    try {
      const familyId = this.getFamilyId();
      const transactionsRef = this.database.ref(`families/${familyId}/transactions`);
      
      console.log('üßπ –ü—Ä–æ–≤–µ—Ä—è–µ–º Firebase –Ω–∞ —É–¥–∞–ª–µ–Ω–Ω—ã–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏...');
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—É—é —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é –∏–∑ Firebase
      for (const [firebaseId, transaction] of Object.entries(firebaseTransactions)) {
        const isDeleted = deletedTransactions.includes(firebaseId) || 
                         deletedTransactions.includes(transaction.id);
        
        if (isDeleted) {
          console.log('üóëÔ∏è –£–¥–∞–ª—è–µ–º –∏–∑ Firebase —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é:', firebaseId, transaction.description);
          try {
            await transactionsRef.child(firebaseId).remove();
            console.log('‚úÖ –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è —É–¥–∞–ª–µ–Ω–∞ –∏–∑ Firebase:', firebaseId);
          } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∏–∑ Firebase:', firebaseId, error);
          }
        }
      }
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ Firebase:', error);
    }
  }

  // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ —É–¥–∞–ª–µ–Ω–Ω—ã—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
  async cleanupDeletedTransactions() {
    const deletedTransactions = JSON.parse(localStorage.getItem('deletedTransactions')) || [];
    if (deletedTransactions.length === 0) return;

    console.log('üßπ –û—á–∏—Å—Ç–∫–∞ —É–¥–∞–ª–µ–Ω–Ω—ã—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π:', deletedTransactions.length);
    
    try {
      const familyId = this.getFamilyId();
      const transactionsRef = this.database.ref(`families/${familyId}/transactions`);
      
      for (const deletedId of deletedTransactions) {
        try {
          await transactionsRef.child(deletedId).remove();
          console.log('üóëÔ∏è –û—á–∏—â–µ–Ω–∞ –∏–∑ Firebase:', deletedId);
        } catch (error) {
          console.log('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—á–∏—Å—Ç–∏—Ç—å:', deletedId, error.message);
        }
      }
      
      this.showSyncStatus('success', `–û—á–∏—â–µ–Ω–æ ${deletedTransactions.length} —É–¥–∞–ª–µ–Ω–Ω—ã—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π`);
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏:', error);
    }
  }

  // –û–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ —Ü–µ–ª–µ–π
  mergeGoals(firebaseGoals) {
    const localGoals = JSON.parse(localStorage.getItem('goals')) || [];
    const mergedGoals = [...localGoals];

    Object.values(firebaseGoals).forEach(firebaseGoal => {
      const existingIndex = mergedGoals.findIndex(
        g => g.firebaseId === firebaseGoal.firebaseId || g.id === firebaseGoal.id
      );

      if (existingIndex === -1) {
        mergedGoals.push(firebaseGoal);
      } else if (firebaseGoal.syncedAt > (mergedGoals[existingIndex].syncedAt || 0)) {
        mergedGoals[existingIndex] = firebaseGoal;
      }
    });

    localStorage.setItem('goals', JSON.stringify(mergedGoals));
    
    if (window.renderGoals) {
      window.renderGoals();
    }
  }

  // –û–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
  mergeCategories(firebaseCategories) {
    const localCategories = JSON.parse(localStorage.getItem('categories')) || [];
    const mergedCategories = [...localCategories];

    Object.values(firebaseCategories).forEach(firebaseCategory => {
      const existingIndex = mergedCategories.findIndex(
        c => c.firebaseId === firebaseCategory.firebaseId || c.id === firebaseCategory.id
      );

      if (existingIndex === -1) {
        mergedCategories.push(firebaseCategory);
      } else if (firebaseCategory.syncedAt > (mergedCategories[existingIndex].syncedAt || 0)) {
        mergedCategories[existingIndex] = firebaseCategory;
      }
    });

    localStorage.setItem('categories', JSON.stringify(mergedCategories));
    
    if (window.renderCategories) {
      window.renderCategories();
    }
  }

  // –û–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–Ω—ã—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
  mergeDeletedTransactions(firebaseDeleted) {
    const localDeleted = JSON.parse(localStorage.getItem('deletedTransactions')) || [];
    const firebaseDeletedIds = Object.keys(firebaseDeleted);
    
    console.log('üóëÔ∏è –û–±—ä–µ–¥–∏–Ω—è–µ–º —É–¥–∞–ª–µ–Ω–Ω—ã–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏...');
    console.log('üì± –õ–æ–∫–∞–ª—å–Ω–æ —É–¥–∞–ª–µ–Ω–æ:', localDeleted.length);
    console.log('‚òÅÔ∏è –í Firebase —É–¥–∞–ª–µ–Ω–æ:', firebaseDeletedIds.length);
    
    // –û–±—ä–µ–¥–∏–Ω—è–µ–º —Å–ø–∏—Å–∫–∏ —É–¥–∞–ª–µ–Ω–Ω—ã—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
    const mergedDeleted = [...new Set([...localDeleted, ...firebaseDeletedIds])];
    
    // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
    let currentTransactions = JSON.parse(localStorage.getItem('transactions')) || [];
    const initialTransactionsCount = currentTransactions.length;
    
    // –£–¥–∞–ª—è–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ –µ—Å—Ç—å –≤ —Å–ø–∏—Å–∫–µ —É–¥–∞–ª–µ–Ω–Ω—ã—Ö
    currentTransactions = currentTransactions.filter(transaction => {
      const isDeleted = mergedDeleted.includes(transaction.id) || 
                       mergedDeleted.includes(transaction.firebaseId);
      
      if (isDeleted) {
        console.log('üóëÔ∏è –£–¥–∞–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω—É—é —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é:', transaction.id, transaction.description);
        return false;
      }
      return true;
    });
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –µ—Å–ª–∏ —á—Ç–æ-—Ç–æ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å
    if (mergedDeleted.length !== localDeleted.length || currentTransactions.length !== initialTransactionsCount) {
      localStorage.setItem('deletedTransactions', JSON.stringify(mergedDeleted));
      localStorage.setItem('transactions', JSON.stringify(currentTransactions));
      
      console.log('‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω —Å–ø–∏—Å–æ–∫ —É–¥–∞–ª–µ–Ω–Ω—ã—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π:', mergedDeleted.length);
      console.log('üóëÔ∏è –£–¥–∞–ª–µ–Ω–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –∏–∑ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞:', initialTransactionsCount - currentTransactions.length);
      
      // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
      if (window.renderTransactionHistory) {
        window.renderTransactionHistory();
      }
      if (window.updateDashboard) {
        window.updateDashboard();
      }
      if (window.calculateBalance) {
        window.calculateBalance();
      }
      
      // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ —Å–æ–±—ã—Ç–∏–µ –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
      window.dispatchEvent(new Event('transactionsUpdated'));
      console.log('üîÑ –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –æ–±–Ω–æ–≤–ª–µ–Ω –ø–æ—Å–ª–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–Ω—ã—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π');
    }
  }

  // –ü–æ–∫–∞–∑ —Å—Ç–∞—Ç—É—Å–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
  showSyncStatus(type, message) {
    // –°–æ–∑–¥–∞–µ–º –∏–ª–∏ –æ–±–Ω–æ–≤–ª—è–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
    let syncIndicator = document.getElementById('syncIndicator');
    if (!syncIndicator) {
      syncIndicator = document.createElement('div');
      syncIndicator.id = 'syncIndicator';
      syncIndicator.style.position = 'fixed';
      syncIndicator.style.top = '10px';
      syncIndicator.style.right = '10px';
      syncIndicator.style.zIndex = '10000';
      syncIndicator.style.padding = '8px 12px';
      syncIndicator.style.borderRadius = '20px';
      syncIndicator.style.fontSize = '12px';
      syncIndicator.style.fontWeight = 'bold';
      syncIndicator.style.transition = 'all 0.3s ease';
      syncIndicator.style.maxWidth = '200px';
      syncIndicator.style.textAlign = 'center';
      document.body.appendChild(syncIndicator);
    }

    // –°—Ç–∏–ª–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞
    switch (type) {
      case 'success':
        syncIndicator.style.backgroundColor = '#4CAF50';
        syncIndicator.style.color = 'white';
        syncIndicator.innerHTML = `‚úÖ ${message}`;
        break;
      case 'error':
        syncIndicator.style.backgroundColor = '#f44336';
        syncIndicator.style.color = 'white';
        syncIndicator.innerHTML = `‚ùå ${message}`;
        break;
      case 'syncing':
        syncIndicator.style.backgroundColor = '#2196F3';
        syncIndicator.style.color = 'white';
        syncIndicator.innerHTML = `üîÑ ${message}`;
        break;
      case 'offline':
        syncIndicator.style.backgroundColor = '#FF9800';
        syncIndicator.style.color = 'white';
        syncIndicator.innerHTML = `üìµ ${message}`;
        break;
      default:
        syncIndicator.style.backgroundColor = '#9E9E9E';
        syncIndicator.style.color = 'white';
        syncIndicator.innerHTML = message;
    }

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä
    syncIndicator.style.opacity = '1';
    syncIndicator.style.transform = 'translateY(0)';

    // –°–∫—Ä—ã–≤–∞–µ–º —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã (–∫—Ä–æ–º–µ –æ—à–∏–±–æ–∫ –∏ –æ—Ñ–ª–∞–π–Ω)
    if (type !== 'error' && type !== 'offline') {
      setTimeout(() => {
        syncIndicator.style.opacity = '0';
        syncIndicator.style.transform = 'translateY(-20px)';
      }, 3000);
    }
  }

  // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è
  async forcSync() {
    console.log('üîÑ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è...');
    this.showSyncStatus('syncing', '–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è...');
    await this.syncToFirebase();
  }

  // –£–ª—É—á—à–µ–Ω–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –≤ Firebase
  async clearAllData() {
    // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞
    this.stopBalanceAutoUpdate();
    
    if (!this.isInitialized || !this.isOnline) {
      console.log('‚ö†Ô∏è –û—á–∏—Å—Ç–∫–∞ –±–µ–∑ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Firebase - —Ç–æ–ª—å–∫–æ –ª–æ–∫–∞–ª—å–Ω–æ');
      // –õ–æ–∫–∞–ª—å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞
      localStorage.removeItem('transactions');
      localStorage.removeItem('goals');
      localStorage.removeItem('categories');
      localStorage.removeItem('deletedTransactions');
      this.showSyncStatus('success', '–õ–æ–∫–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ—á–∏—â–µ–Ω—ã');
      
      // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
      if (window.renderTransactionHistory) window.renderTransactionHistory();
      if (window.updateDashboard) window.updateDashboard();
      if (window.calculateBalance) window.calculateBalance();
      return;
    }

    try {
      console.log('üßπ –ù–∞—á–∏–Ω–∞–µ–º –ø–æ–ª–Ω—É—é –æ—á–∏—Å—Ç–∫—É –¥–∞–Ω–Ω—ã—Ö...');
      this.showSyncStatus('syncing', '–û—á–∏—Å—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö...');
      
      const familyId = this.getFamilyId();
      const familyRef = this.database.ref(`families/${familyId}`);
      
      // –û—á–∏—â–∞–µ–º Firebase
      await familyRef.remove();
      console.log('‚òÅÔ∏è Firebase –¥–∞–Ω–Ω—ã–µ –æ—á–∏—â–µ–Ω—ã');
      
      // –û—á–∏—â–∞–µ–º localStorage
      localStorage.removeItem('transactions');
      localStorage.removeItem('goals');
      localStorage.removeItem('categories');
      localStorage.removeItem('deletedTransactions');
      console.log('üì± –õ–æ–∫–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ—á–∏—â–µ–Ω—ã');
      
      this.showSyncStatus('success', '–í—Å–µ –¥–∞–Ω–Ω—ã–µ –æ—á–∏—â–µ–Ω—ã');
      
      // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
      setTimeout(() => {
        if (window.renderTransactionHistory) {
          window.renderTransactionHistory();
        }
        if (window.updateDashboard) {
          window.updateDashboard();
        }
        if (window.calculateBalance) {
          window.calculateBalance();
        }
        
        // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ —Å–æ–±—ã—Ç–∏–µ –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
        window.dispatchEvent(new Event('dataCleared'));
        console.log('üîÑ –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ–±–Ω–æ–≤–ª–µ–Ω –ø–æ—Å–ª–µ –æ—á–∏—Å—Ç–∫–∏');
      }, 500);
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö:', error);
      this.showSyncStatus('error', '–û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏: ' + error.message);
    }
  }

  // –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
  getSyncStats() {
    const stats = {
      isInitialized: this.isInitialized,
      isOnline: this.isOnline,
      lastSyncTime: this.lastSyncTime,
      familyId: this.getFamilyId(),
      userId: this.getUserId(),
      localTransactions: JSON.parse(localStorage.getItem('transactions') || '[]').length,
      deletedTransactions: JSON.parse(localStorage.getItem('deletedTransactions') || '[]').length
    };
    
    console.log('üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏:', stats);
    return stats;
  }

  // –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
  exportData() {
    const data = {
      timestamp: new Date().toISOString(),
      familyId: this.getFamilyId(),
      userId: this.getUserId(),
      transactions: JSON.parse(localStorage.getItem('transactions') || '[]'),
      goals: JSON.parse(localStorage.getItem('goals') || '[]'),
      categories: JSON.parse(localStorage.getItem('categories') || '[]'),
      deletedTransactions: JSON.parse(localStorage.getItem('deletedTransactions') || '[]')
    };
    
    console.log('üì¶ –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö:', data);
    return data;
  }

  // –ò–º–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏
  async importData(data) {
    try {
      console.log('üì• –ò–º–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö...', data);
      
      if (data.transactions) {
        localStorage.setItem('transactions', JSON.stringify(data.transactions));
      }
      if (data.goals) {
        localStorage.setItem('goals', JSON.stringify(data.goals));
      }
      if (data.categories) {
        localStorage.setItem('categories', JSON.stringify(data.categories));
      }
      if (data.deletedTransactions) {
        localStorage.setItem('deletedTransactions', JSON.stringify(data.deletedTransactions));
      }
      
      // –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º —Å Firebase
      await this.syncToFirebase();
      
      this.showSyncStatus('success', '–î–∞–Ω–Ω—ã–µ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã');
      console.log('‚úÖ –î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã');
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –¥–∞–Ω–Ω—ã—Ö:', error);
      this.showSyncStatus('error', '–û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: ' + error.message);
    }
  }
}

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–µ–π
window.initFirebaseSync = function() {
  if (!window.firebaseSync) {
    window.firebaseSync = new FirebaseSync();
    console.log('üî• Firebase —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');
  }
  return window.firebaseSync;
};

window.syncToFirebase = function() {
  if (window.firebaseSync) {
    window.firebaseSync.syncToFirebase();
  } else {
    console.log('‚ö†Ô∏è Firebase —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');
  }
};

window.deleteFromFirebase = function(transactionId, firebaseId) {
  if (window.firebaseSync) {
    window.firebaseSync.deleteTransactionFromFirebase(transactionId, firebaseId);
  } else {
    console.log('‚ö†Ô∏è Firebase —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');
  }
};

window.deleteTransactionFromFirebase = function(transactionId, firebaseId) {
  if (window.firebaseSync) {
    window.firebaseSync.deleteTransactionFromFirebase(transactionId, firebaseId);
  } else {
    console.log('‚ö†Ô∏è Firebase —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');
  }
};

window.forcSyncFirebase = function() {
  if (window.firebaseSync) {
    window.firebaseSync.forcSync();
  } else {
    console.log('‚ö†Ô∏è Firebase —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');
  }
};

window.clearAllData = function() {
  if (window.firebaseSync) {
    window.firebaseSync.clearAllData();
  } else {
    console.log('‚ö†Ô∏è Firebase —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');
  }
};

window.cleanupDeletedTransactions = function() {
  if (window.firebaseSync) {
    window.firebaseSync.cleanupDeletedTransactions();
  } else {
    console.log('‚ö†Ô∏è Firebase —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');
  }
};

window.getSyncStats = function() {
  if (window.firebaseSync) {
    return window.firebaseSync.getSyncStats();
  } else {
    console.log('‚ö†Ô∏è Firebase —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');
    return null;
  }
};

window.exportData = function() {
  if (window.firebaseSync) {
    return window.firebaseSync.exportData();
  } else {
    console.log('‚ö†Ô∏è Firebase —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');
    return null;
  }
};

window.importData = function(data) {
  if (window.firebaseSync) {
    window.firebaseSync.importData(data);
  } else {
    console.log('‚ö†Ô∏è Firebase —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');
  }
};

// –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º –±–∞–ª–∞–Ω—Å–∞
window.startBalanceAutoUpdate = function() {
  if (window.firebaseSync) {
    window.firebaseSync.startBalanceAutoUpdate();
  } else {
    console.log('‚ö†Ô∏è Firebase —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');
  }
};

window.stopBalanceAutoUpdate = function() {
  if (window.firebaseSync) {
    window.firebaseSync.stopBalanceAutoUpdate();
  } else {
    console.log('‚ö†Ô∏è Firebase —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');
  }
};

window.toggleBalanceAutoUpdate = function() {
  if (window.firebaseSync) {
    if (window.firebaseSync.balanceUpdateInterval) {
      window.firebaseSync.stopBalanceAutoUpdate();
      console.log('üí∞ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ –æ—Ç–∫–ª—é—á–µ–Ω–æ');
    } else {
      window.firebaseSync.startBalanceAutoUpdate();
      console.log('üí∞ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ –≤–∫–ª—é—á–µ–Ω–æ');
    }
  } else {
    console.log('‚ö†Ô∏è Firebase —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');
  }
};

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å–∫—Ä–∏–ø—Ç–∞
console.log('üî• Firebase —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞');

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
if (document.readyState === 'loading') {
  document.addEventListener('DOMContentLoaded', () => {
    setTimeout(() => {
      window.initFirebaseSync();
    }, 1000);
    
    // –†–µ–∑–µ—Ä–≤–Ω—ã–π –∑–∞–ø—É—Å–∫ –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
    setTimeout(() => {
      console.log('üîÑ –†–µ–∑–µ—Ä–≤–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è...');
      if (window.firebaseSync && !window.firebaseSync.balanceUpdateInterval) {
        console.log('‚ö†Ô∏è –ê–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–µ –∑–∞–ø—É—â–µ–Ω–æ, –∑–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ');
        window.firebaseSync.startBalanceAutoUpdate();
      } else if (!window.firebaseSync) {
        console.log('‚ö†Ô∏è FirebaseSync –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω–æ–µ –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ');
        createFallbackAutoUpdate();
      }
    }, 5000);
  });
} else {
  setTimeout(() => {
    window.initFirebaseSync();
  }, 1000);
  
  // –†–µ–∑–µ—Ä–≤–Ω—ã–π –∑–∞–ø—É—Å–∫ –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
  setTimeout(() => {
    console.log('üîÑ –†–µ–∑–µ—Ä–≤–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è...');
    if (window.firebaseSync && !window.firebaseSync.balanceUpdateInterval) {
      console.log('‚ö†Ô∏è –ê–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–µ –∑–∞–ø—É—â–µ–Ω–æ, –∑–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ');
      window.firebaseSync.startBalanceAutoUpdate();
    } else if (!window.firebaseSync) {
      console.log('‚ö†Ô∏è FirebaseSync –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω–æ–µ –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ');
      createFallbackAutoUpdate();
    }
  }, 5000);
}

// –†–µ–∑–µ—Ä–≤–Ω–æ–µ –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –µ—Å–ª–∏ Firebase –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç
function createFallbackAutoUpdate() {
  console.log('üîÑ –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω–æ–µ –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞...');
  
  if (window.fallbackBalanceInterval) {
    clearInterval(window.fallbackBalanceInterval);
  }
  
  window.fallbackBalanceInterval = setInterval(() => {
    console.log('üí∞ –†–µ–∑–µ—Ä–≤–Ω–æ–µ –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞...');
    
    // –í—ã–∑—ã–≤–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    if (typeof window.updateDashboard === 'function') {
      window.updateDashboard();
    }
    if (typeof window.calculateBalance === 'function') {
      window.calculateBalance();
    }
    if (typeof window.renderTransactionHistory === 'function') {
      window.renderTransactionHistory();
    }
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–±—ã—Ç–∏–µ
    window.dispatchEvent(new Event('balanceUpdated'));
  }, 1500);
  
  console.log('‚úÖ –†–µ–∑–µ—Ä–≤–Ω–æ–µ –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ –∑–∞–ø—É—â–µ–Ω–æ');
}